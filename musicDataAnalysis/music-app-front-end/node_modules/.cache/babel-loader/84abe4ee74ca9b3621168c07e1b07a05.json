{"ast":null,"code":"var _jsxFileName = \"/home/anant/Documents/personal_git/musicDataAnalysis/musicDataAnalysis/music-app-front-end/src/components/PopulateTable.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useTable } from 'react-table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Styles = styled.div`\n      padding: 1rem;\n    \n      table {\n        border-spacing: 0;\n        border: 1px solid black;\n    \n        tr {\n          :last-child {\n            td {\n              border-bottom: 0;\n            }\n          }\n        }\n    \n        th,\n        td {\n          margin: 0;\n          padding: 0.5rem;\n          border-bottom: 1px solid black;\n          border-right: 1px solid black;\n    \n          :last-child {\n            border-right: 0;\n          }\n        }\n      }\n    `;\n_c = Styles;\n\nfunction Table({\n  columns,\n  data\n}) {\n  _s();\n\n  // Use the state and functions returned from useTable to build your UI\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  }); // Render the UI for your table\n\n  return /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n          children: column.render('Header')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n      children: rows.map((row, i) => {\n        prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n          children: row.cells.map(cell => {\n            return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n              children: cell.render('Cell')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 40\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Table, \"lmr3C0xjIARKaLMprIV1wA++iEs=\", false, function () {\n  return [useTable];\n});\n\n_c2 = Table;\n\nfunction ItemTable(props) {\n  _s2();\n\n  const columns = React.useMemo(() => [{\n    Header: 'Item details',\n    columns: [{\n      Header: 'Date',\n      accessor: 'date'\n    }, {\n      Header: 'Title',\n      accessor: 'title'\n    }, {\n      Header: 'Main category',\n      accessor: 'main_cat'\n    }, {\n      Header: 'Brand',\n      accessor: 'brand'\n    }, {\n      Header: 'Item ID',\n      accessor: 'asin'\n    }]\n  }], []);\n  console.log(\"inside itemTable\");\n  console.log(props.brandData);\n  const data = React.useMemo(() => props.brandData, []);\n  return /*#__PURE__*/_jsxDEV(Styles, {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 11\n  }, this);\n}\n\n_s2(ItemTable, \"7zObr1GywQUmP9L3sfy/4IDluAk=\");\n\n_c3 = ItemTable;\nexport default ItemTable;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Styles\");\n$RefreshReg$(_c2, \"Table\");\n$RefreshReg$(_c3, \"ItemTable\");","map":{"version":3,"sources":["/home/anant/Documents/personal_git/musicDataAnalysis/musicDataAnalysis/music-app-front-end/src/components/PopulateTable.js"],"names":["React","styled","useTable","Styles","div","Table","columns","data","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","i","getRowProps","cells","cell","getCellProps","ItemTable","props","useMemo","Header","accessor","console","log","brandData"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { useTable } from 'react-table'\n\n\n    const Styles = styled.div`\n      padding: 1rem;\n    \n      table {\n        border-spacing: 0;\n        border: 1px solid black;\n    \n        tr {\n          :last-child {\n            td {\n              border-bottom: 0;\n            }\n          }\n        }\n    \n        th,\n        td {\n          margin: 0;\n          padding: 0.5rem;\n          border-bottom: 1px solid black;\n          border-right: 1px solid black;\n    \n          :last-child {\n            border-right: 0;\n          }\n        }\n      }\n    `;\n\n    function Table({columns, data}) {\n        // Use the state and functions returned from useTable to build your UI\n        const {\n            getTableProps,\n            getTableBodyProps,\n            headerGroups,\n            rows,\n            prepareRow,\n        } = useTable({\n            columns,\n            data,\n        });\n\n        // Render the UI for your table\n        return (\n            <table {...getTableProps()}>\n                <thead>\n                {headerGroups.map(headerGroup => (\n                    <tr {...headerGroup.getHeaderGroupProps()}>\n                        {headerGroup.headers.map(column => (\n                            <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n                        ))}\n                    </tr>\n                ))}\n                </thead>\n                <tbody {...getTableBodyProps()}>\n                {rows.map((row, i) => {\n                    prepareRow(row)\n                    return (\n                        <tr {...row.getRowProps()}>\n                            {row.cells.map(cell => {\n                                return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                            })}\n                        </tr>\n                    )\n                })}\n                </tbody>\n            </table>\n        )\n    }\n\n    function ItemTable(props) {\n        const columns = React.useMemo(\n            () => [\n                {\n                    Header: 'Item details',\n                    columns: [\n                        {\n                            Header: 'Date',\n                            accessor: 'date',\n                        },\n                        {\n                            Header: 'Title',\n                            accessor: 'title',\n                        },\n                        {\n                            Header: 'Main category',\n                            accessor: 'main_cat',\n                        },\n                        {\n                            Header: 'Brand',\n                            accessor: 'brand',\n                        },\n                        {\n                            Header: 'Item ID',\n                            accessor: 'asin',\n                        }\n                    ],\n                }\n            ],\n            []\n        )\n\n        console.log(\"inside itemTable\");\n        console.log(props.brandData);\n        const data = React.useMemo(() => props.brandData, [])\n\n\n        return (\n          <Styles>\n            <Table columns={columns} data={data} />\n          </Styles>\n        )\n}\nexport default ItemTable\n"]},"metadata":{},"sourceType":"module"}