{"ast":null,"code":"var _jsxFileName = \"/home/anant/Documents/personal_git/musicDataAnalysis/musicDataAnalysis/music-app-front-end/src/components/PopulateTable.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useTable } from 'react-table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction f(brandData) {\n  var _s = $RefreshSig$(),\n      _s2 = $RefreshSig$();\n\n  const Styles = styled.div`\n      padding: 1rem;\n    \n      table {\n        border-spacing: 0;\n        border: 1px solid black;\n    \n        tr {\n          :last-child {\n            td {\n              border-bottom: 0;\n            }\n          }\n        }\n    \n        th,\n        td {\n          margin: 0;\n          padding: 0.5rem;\n          border-bottom: 1px solid black;\n          border-right: 1px solid black;\n    \n          :last-child {\n            border-right: 0;\n          }\n        }\n      }\n    `;\n\n  function Table({\n    columns,\n    data\n  }) {\n    _s();\n\n    // Use the state and functions returned from useTable to build your UI\n    const {\n      getTableProps,\n      getTableBodyProps,\n      headerGroups,\n      rows,\n      prepareRow\n    } = useTable({\n      columns,\n      data\n    }); // Render the UI for your table\n\n    return /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n            children: column.render('Header')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n        children: rows.map((row, i) => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n            children: row.cells.map(cell => {\n              return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                children: cell.render('Cell')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 40\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  }\n\n  _s(Table, \"lmr3C0xjIARKaLMprIV1wA++iEs=\", false, function () {\n    return [useTable];\n  });\n\n  function ItemTable() {\n    _s2();\n\n    const columns = React.useMemo(() => [{\n      Header: 'Item details',\n      columns: [{\n        Header: 'Date',\n        accessor: 'date'\n      }, {\n        Header: 'Title',\n        accessor: 'title'\n      }, {\n        Header: 'Main category',\n        accessor: 'main_cat'\n      }, {\n        Header: 'Brand',\n        accessor: 'brand'\n      }, {\n        Header: 'Item ID',\n        accessor: 'asin'\n      }]\n    }], []);\n    console.log(\"inside itemTable\");\n    console.log(brandData);\n    const data = React.useMemo(() => brandData, []);\n    return /*#__PURE__*/_jsxDEV(Styles, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        columns: columns,\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }, this);\n  }\n\n  _s2(ItemTable, \"7zObr1GywQUmP9L3sfy/4IDluAk=\");\n}\n\nexport default f;","map":{"version":3,"sources":["/home/anant/Documents/personal_git/musicDataAnalysis/musicDataAnalysis/music-app-front-end/src/components/PopulateTable.js"],"names":["React","styled","useTable","f","brandData","Styles","div","Table","columns","data","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","i","getRowProps","cells","cell","getCellProps","ItemTable","useMemo","Header","accessor","console","log"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { useTable } from 'react-table'\n\nfunction f(brandData) {\n\n    const Styles = styled.div`\n      padding: 1rem;\n    \n      table {\n        border-spacing: 0;\n        border: 1px solid black;\n    \n        tr {\n          :last-child {\n            td {\n              border-bottom: 0;\n            }\n          }\n        }\n    \n        th,\n        td {\n          margin: 0;\n          padding: 0.5rem;\n          border-bottom: 1px solid black;\n          border-right: 1px solid black;\n    \n          :last-child {\n            border-right: 0;\n          }\n        }\n      }\n    `;\n\n    function Table({columns, data}) {\n        // Use the state and functions returned from useTable to build your UI\n        const {\n            getTableProps,\n            getTableBodyProps,\n            headerGroups,\n            rows,\n            prepareRow,\n        } = useTable({\n            columns,\n            data,\n        });\n\n        // Render the UI for your table\n        return (\n            <table {...getTableProps()}>\n                <thead>\n                {headerGroups.map(headerGroup => (\n                    <tr {...headerGroup.getHeaderGroupProps()}>\n                        {headerGroup.headers.map(column => (\n                            <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n                        ))}\n                    </tr>\n                ))}\n                </thead>\n                <tbody {...getTableBodyProps()}>\n                {rows.map((row, i) => {\n                    prepareRow(row)\n                    return (\n                        <tr {...row.getRowProps()}>\n                            {row.cells.map(cell => {\n                                return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                            })}\n                        </tr>\n                    )\n                })}\n                </tbody>\n            </table>\n        )\n    }\n\n    function ItemTable() {\n        const columns = React.useMemo(\n            () => [\n                {\n                    Header: 'Item details',\n                    columns: [\n                        {\n                            Header: 'Date',\n                            accessor: 'date',\n                        },\n                        {\n                            Header: 'Title',\n                            accessor: 'title',\n                        },\n                        {\n                            Header: 'Main category',\n                            accessor: 'main_cat',\n                        },\n                        {\n                            Header: 'Brand',\n                            accessor: 'brand',\n                        },\n                        {\n                            Header: 'Item ID',\n                            accessor: 'asin',\n                        }\n                    ],\n                }\n            ],\n            []\n        )\n\n        console.log(\"inside itemTable\");\n        console.log(brandData);\n        const data = React.useMemo(() => brandData, [])\n\n\n        return (\n          <Styles>\n            <Table columns={columns} data={data} />\n          </Styles>\n        )\n    }\n}\nexport default f\n"]},"metadata":{},"sourceType":"module"}