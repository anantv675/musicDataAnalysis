{"ast":null,"code":"var _jsxFileName = \"/home/anant/Documents/personal_git/musicDataAnalysis/musicDataAnalysis/music-app-front-end/src/components/ItemList.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from \"react\";\nimport ItemService from '../services/ItemService';\nimport React from \"react\";\nimport styled from 'styled-components';\nimport { useTable } from 'react-table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FetchData({\n  columns,\n  data\n}) {\n  _s();\n\n  const Styles = styled.div`\n  padding: 1rem;\n\n  table {\n    border-spacing: 0;\n    border: 1px solid black;\n\n    tr {\n      :last-child {\n        td {\n          border-bottom: 0;\n        }\n      }\n    }\n\n    th,\n    td {\n      margin: 0;\n      padding: 0.5rem;\n      border-bottom: 1px solid black;\n      border-right: 1px solid black;\n\n      :last-child {\n        border-right: 0;\n      }\n    }\n  }\n`; // Use the state and functions returned from useTable to build your UI\n  // const {\n  //     getTableProps,\n  //     getTableBodyProps,\n  //     headerGroups,\n  //     rows,\n  //     prepareRow,\n  // } = useTable({\n  //     columns,\n  //     data,\n  // })\n  // Render the UI for your table\n\n  const [brand, setBrand] = useState('');\n  const inputRef = useRef();\n  let apiData;\n\n  const submitHandler = e => {\n    e.preventDefault();\n    setBrand(inputRef.current.value);\n    ItemService.getAllItemsByBrand(inputRef.current.value).then(data => {\n      apiData = data;\n    });\n    ItemService.getAllItemsByBrand(inputRef.current.value).then(data => {\n      response.json({\n        message: 'Request received!',\n        data\n      });\n    }).catch(err => console.log(err));\n    console.log(apiData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: inputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Submit Value: \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: brand\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 13\n  }, this);\n}\n\n_s(FetchData, \"zNXRtbfvFBx7jw0Ixwh4yggjamM=\");\n\n_c = FetchData;\n;\nexport default FetchData;\n\nvar _c;\n\n$RefreshReg$(_c, \"FetchData\");","map":{"version":3,"sources":["/home/anant/Documents/personal_git/musicDataAnalysis/musicDataAnalysis/music-app-front-end/src/components/ItemList.js"],"names":["useRef","useState","ItemService","React","styled","useTable","FetchData","columns","data","Styles","div","brand","setBrand","inputRef","apiData","submitHandler","e","preventDefault","current","value","getAllItemsByBrand","then","response","json","message","catch","err","console","log"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,QAAyB,aAAzB;;;AAKI,SAASC,SAAT,CAAmB;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAnB,EAAqC;AAAA;;AACjC,QAAMC,MAAM,GAAGL,MAAM,CAACM,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA3BQ,CADiC,CA6BjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMY,QAAQ,GAAGb,MAAM,EAAvB;AACA,MAAIc,OAAJ;;AACA,QAAMC,aAAa,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACAL,IAAAA,QAAQ,CAACC,QAAQ,CAACK,OAAT,CAAiBC,KAAlB,CAAR;AACAjB,IAAAA,WAAW,CAACkB,kBAAZ,CAA+BP,QAAQ,CAACK,OAAT,CAAiBC,KAAhD,EAAuDE,IAAvD,CAA4Db,IAAI,IAAG;AAC/DM,MAAAA,OAAO,GAAGN,IAAV;AACH,KAFD;AAGAN,IAAAA,WAAW,CAACkB,kBAAZ,CAA+BP,QAAQ,CAACK,OAAT,CAAiBC,KAAhD,EACKE,IADL,CACUb,IAAI,IAAI;AAACc,MAAAA,QAAQ,CAACC,IAAT,CAAc;AAAEC,QAAAA,OAAO,EAAE,mBAAX;AAAgChB,QAAAA;AAAhC,OAAd;AACd,KAFL,EAGKiB,KAHL,CAGWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAHlB;AAIAC,IAAAA,OAAO,CAACC,GAAR,CAAYd,OAAZ;AACH,GAXD;;AAeA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI;AAAM,MAAA,QAAQ,EAAEC,aAAhB;AAAA,8BACI;AAAO,QAAA,GAAG,EAAEF;AAAZ;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AAAA,gDAAiB;AAAA,kBAAIF;AAAJ;AAAA;AAAA;AAAA;AAAA,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmCH;;GAhGQL,S;;KAAAA,S;AAgGR;AAGD,eAAeA,SAAf","sourcesContent":["import { useRef, useState } from \"react\";\nimport ItemService from '../services/ItemService'\nimport React from \"react\";\nimport styled from 'styled-components'\nimport { useTable } from 'react-table'\n\n\n\n\n    function FetchData({ columns, data }){\n        const Styles = styled.div`\n  padding: 1rem;\n\n  table {\n    border-spacing: 0;\n    border: 1px solid black;\n\n    tr {\n      :last-child {\n        td {\n          border-bottom: 0;\n        }\n      }\n    }\n\n    th,\n    td {\n      margin: 0;\n      padding: 0.5rem;\n      border-bottom: 1px solid black;\n      border-right: 1px solid black;\n\n      :last-child {\n        border-right: 0;\n      }\n    }\n  }\n`;\n        // Use the state and functions returned from useTable to build your UI\n        // const {\n        //     getTableProps,\n        //     getTableBodyProps,\n        //     headerGroups,\n        //     rows,\n        //     prepareRow,\n        // } = useTable({\n        //     columns,\n        //     data,\n        // })\n\n        // Render the UI for your table\n\n        const [brand, setBrand] = useState('');\n        const inputRef = useRef();\n        let apiData;\n        const submitHandler = (e) => {\n            e.preventDefault();\n            setBrand(inputRef.current.value);\n            ItemService.getAllItemsByBrand(inputRef.current.value).then(data =>{\n                apiData = data\n            });\n            ItemService.getAllItemsByBrand(inputRef.current.value)\n                .then(data => {response.json({ message: 'Request received!', data })\n                })\n                .catch(err => console.log(err))\n            console.log(apiData)\n        }\n\n\n\n        return (\n            <div className=\"App\">\n                <form onSubmit={submitHandler}>\n                    <input ref={inputRef} />\n                    <button type=\"submit\">Submit</button>\n                </form>\n\n                <p>Submit Value: <b>{brand}</b></p>\n\n                {/*<table {...getTableProps()}>*/}\n                {/*    <thead>*/}\n                {/*    {headerGroups.map(headerGroup => (*/}\n                {/*        <tr {...headerGroup.getHeaderGroupProps()}>*/}\n                {/*            {headerGroup.headers.map(column => (*/}\n                {/*                <th {...column.getHeaderProps()}>{column.render('Header')}</th>*/}\n                {/*            ))}*/}\n                {/*        </tr>*/}\n                {/*    ))}*/}\n                {/*    </thead>*/}\n                {/*    <tbody {...getTableBodyProps()}>*/}\n                {/*    {rows.map((row, i) => {*/}\n                {/*        prepareRow(row)*/}\n                {/*        return (*/}\n                {/*            <tr {...row.getRowProps()}>*/}\n                {/*                {row.cells.map(cell => {*/}\n                {/*                    return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>*/}\n                {/*                })}*/}\n                {/*            </tr>*/}\n                {/*        )*/}\n                {/*    })}*/}\n                {/*    </tbody>*/}\n                {/*</table>*/}\n\n            </div>\n        );\n    };\n\n\n    export default FetchData"]},"metadata":{},"sourceType":"module"}