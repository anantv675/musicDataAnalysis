{"ast":null,"code":"var _jsxFileName = \"/home/anant/Documents/personal_git/musicDataAnalysis/musicDataAnalysis/music-app-front-end/src/components/PopulateTable.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport { useTable, useFilters, useGlobalFilter, useAsyncDebounce } from 'react-table';\nimport matchSorter from 'match-sorter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Styles = styled.div`\n  padding: 1rem;\n\n  table {\n    border-spacing: 0;\n    border: 1px solid black;\n\n    tr {\n      :last-child {\n        td {\n          border-bottom: 0;\n        }\n      }\n    }\n\n    th,\n    td {\n      margin: 0;\n      padding: 0.5rem;\n      border-bottom: 1px solid black;\n      border-right: 1px solid black;\n\n      :last-child {\n        border-right: 0;\n      }\n    }\n  }\n`; // Define a default UI for filtering\n\n_c = Styles;\n\nfunction GlobalFilter({\n  preGlobalFilteredRows,\n  globalFilter,\n  setGlobalFilter\n}) {\n  _s();\n\n  const count = preGlobalFilteredRows.length;\n  const [value, setValue] = React.useState(globalFilter);\n  const onChange = useAsyncDebounce(value => {\n    setGlobalFilter(value || undefined);\n  }, 200);\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: [\"Search:\", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n      value: value || \"\",\n      onChange: e => {\n        setValue(e.target.value);\n        onChange(e.target.value);\n      },\n      placeholder: `${count} records...`,\n      style: {\n        fontSize: '1.1rem',\n        border: '0'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n} // Define a default UI for filtering\n\n\n_s(GlobalFilter, \"u76gItWTPW4jhTYSCcNG7/LfbyA=\", false, function () {\n  return [useAsyncDebounce];\n});\n\n_c2 = GlobalFilter;\n\nfunction DefaultColumnFilter({\n  column: {\n    filterValue,\n    preFilteredRows,\n    setFilter\n  }\n}) {\n  const count = preFilteredRows.length;\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    value: filterValue || '',\n    onChange: e => {\n      setFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\n    },\n    placeholder: `Search ${count} records...`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n} // This is a custom filter UI for selecting\n// a unique option from a list\n\n\n_c3 = DefaultColumnFilter;\n\nfunction SelectColumnFilter({\n  column: {\n    filterValue,\n    setFilter,\n    preFilteredRows,\n    id\n  }\n}) {\n  _s2();\n\n  // Calculate the options for filtering\n  // using the preFilteredRows\n  const options = React.useMemo(() => {\n    const options = new Set();\n    preFilteredRows.forEach(row => {\n      options.add(row.values[id]);\n    });\n    return [...options.values()];\n  }, [id, preFilteredRows]); // Render a multi-select box\n\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    value: filterValue,\n    onChange: e => {\n      setFilter(e.target.value || undefined);\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"\",\n      children: \"All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), options.map((option, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: option,\n      children: option\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(SelectColumnFilter, \"UfleS4trXWGxzhzYTKqqYygmjCE=\");\n\n_c4 = SelectColumnFilter;\n\nfunction Table({\n  columns,\n  data\n}) {\n  _s3();\n\n  // Use the state and functions returned from useTable to build your UI\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  }); // Render the UI for your table\n\n  return /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n          children: column.render('Header')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n      children: rows.map((row, i) => {\n        prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n          children: row.cells.map(cell => {\n            return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n              children: cell.render('Cell')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 40\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 13\n  }, this);\n}\n\n_s3(Table, \"lmr3C0xjIARKaLMprIV1wA++iEs=\", false, function () {\n  return [useTable];\n});\n\n_c5 = Table;\n\nfunction ItemTable(props) {\n  _s4();\n\n  const columns = React.useMemo(() => [{\n    Header: 'Item details',\n    columns: [{\n      Header: 'Date',\n      accessor: 'date'\n    }, {\n      Header: 'Title',\n      accessor: 'title'\n    }, {\n      Header: 'Main category',\n      accessor: 'main_cat'\n    }, {\n      Header: 'Brand',\n      accessor: 'brand'\n    }, {\n      Header: 'Item ID',\n      accessor: 'asin'\n    }]\n  }], []);\n  const data = React.useMemo(() => props.brandData, [props.brandData]);\n  return /*#__PURE__*/_jsxDEV(Styles, {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 11\n  }, this);\n}\n\n_s4(ItemTable, \"7zObr1GywQUmP9L3sfy/4IDluAk=\");\n\n_c6 = ItemTable;\nexport default ItemTable;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Styles\");\n$RefreshReg$(_c2, \"GlobalFilter\");\n$RefreshReg$(_c3, \"DefaultColumnFilter\");\n$RefreshReg$(_c4, \"SelectColumnFilter\");\n$RefreshReg$(_c5, \"Table\");\n$RefreshReg$(_c6, \"ItemTable\");","map":{"version":3,"sources":["/home/anant/Documents/personal_git/musicDataAnalysis/musicDataAnalysis/music-app-front-end/src/components/PopulateTable.js"],"names":["React","useState","useRef","styled","useTable","useFilters","useGlobalFilter","useAsyncDebounce","matchSorter","Styles","div","GlobalFilter","preGlobalFilteredRows","globalFilter","setGlobalFilter","count","length","value","setValue","onChange","undefined","e","target","fontSize","border","DefaultColumnFilter","column","filterValue","preFilteredRows","setFilter","SelectColumnFilter","id","options","useMemo","Set","forEach","row","add","values","map","option","i","Table","columns","data","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","headerGroup","getHeaderGroupProps","headers","getHeaderProps","render","getRowProps","cells","cell","getCellProps","ItemTable","props","Header","accessor","brandData"],"mappings":"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","sourcesContent":["import React, {useState,useRef} from 'react'\nimport styled from 'styled-components'\nimport { useTable, useFilters, useGlobalFilter, useAsyncDebounce } from 'react-table'\nimport matchSorter from 'match-sorter'\n\n\nconst Styles = styled.div`\n  padding: 1rem;\n\n  table {\n    border-spacing: 0;\n    border: 1px solid black;\n\n    tr {\n      :last-child {\n        td {\n          border-bottom: 0;\n        }\n      }\n    }\n\n    th,\n    td {\n      margin: 0;\n      padding: 0.5rem;\n      border-bottom: 1px solid black;\n      border-right: 1px solid black;\n\n      :last-child {\n        border-right: 0;\n      }\n    }\n  }\n`;\n\n// Define a default UI for filtering\nfunction GlobalFilter({\n                          preGlobalFilteredRows,\n                          globalFilter,\n                          setGlobalFilter,\n                      }) {\n    const count = preGlobalFilteredRows.length\n    const [value, setValue] = React.useState(globalFilter)\n    const onChange = useAsyncDebounce(value => {\n        setGlobalFilter(value || undefined)\n    }, 200)\n\n    return (\n        <span>\n      Search:{' '}\n            <input\n                value={value || \"\"}\n                onChange={e => {\n                    setValue(e.target.value);\n                    onChange(e.target.value);\n                }}\n                placeholder={`${count} records...`}\n                style={{\n                    fontSize: '1.1rem',\n                    border: '0',\n                }}\n            />\n    </span>\n    )\n}\n\n// Define a default UI for filtering\nfunction DefaultColumnFilter({\n                                 column: { filterValue, preFilteredRows, setFilter },\n                             }) {\n    const count = preFilteredRows.length\n\n    return (\n        <input\n            value={filterValue || ''}\n            onChange={e => {\n                setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\n            }}\n            placeholder={`Search ${count} records...`}\n        />\n    )\n}\n\n// This is a custom filter UI for selecting\n// a unique option from a list\nfunction SelectColumnFilter({\n                                column: { filterValue, setFilter, preFilteredRows, id },\n                            }) {\n    // Calculate the options for filtering\n    // using the preFilteredRows\n    const options = React.useMemo(() => {\n        const options = new Set()\n        preFilteredRows.forEach(row => {\n            options.add(row.values[id])\n        })\n        return [...options.values()]\n    }, [id, preFilteredRows])\n\n    // Render a multi-select box\n    return (\n        <select\n            value={filterValue}\n            onChange={e => {\n                setFilter(e.target.value || undefined)\n            }}\n        >\n            <option value=\"\">All</option>\n            {options.map((option, i) => (\n                <option key={i} value={option}>\n                    {option}\n                </option>\n            ))}\n        </select>\n    )\n}\n\n\n    function Table({columns, data}) {\n\n        // Use the state and functions returned from useTable to build your UI\n        const {\n            getTableProps,\n            getTableBodyProps,\n            headerGroups,\n            rows,\n            prepareRow,\n        } = useTable({\n            columns,\n            data,\n        });\n\n        // Render the UI for your table\n        return (\n            <table {...getTableProps()}>\n                <thead>\n                {headerGroups.map(headerGroup => (\n                    <tr {...headerGroup.getHeaderGroupProps()}>\n                        {headerGroup.headers.map(column => (\n                            <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n                        ))}\n                    </tr>\n                ))}\n                </thead>\n                <tbody {...getTableBodyProps()}>\n                {rows.map((row, i) => {\n                    prepareRow(row)\n                    return (\n                        <tr {...row.getRowProps()}>\n                            {row.cells.map(cell => {\n                                return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                            })}\n                        </tr>\n                    )\n                })}\n                </tbody>\n            </table>\n        )\n    }\n\n    function ItemTable(props) {\n\n        const columns = React.useMemo(\n            () => [\n                {\n                    Header: 'Item details',\n                    columns: [\n                        {\n                            Header: 'Date',\n                            accessor: 'date',\n                        },\n                        {\n                            Header: 'Title',\n                            accessor: 'title',\n                        },\n                        {\n                            Header: 'Main category',\n                            accessor: 'main_cat',\n                        },\n                        {\n                            Header: 'Brand',\n                            accessor: 'brand',\n                        },\n                        {\n                            Header: 'Item ID',\n                            accessor: 'asin',\n                        }\n                    ],\n                }\n            ],\n            []\n        );\n\n        const data = React.useMemo(() => props.brandData, [props.brandData]);\n        return (\n          <Styles>\n            <Table columns={columns} data={data} />\n          </Styles>\n        )\n}\nexport default ItemTable\n"]},"metadata":{},"sourceType":"module"}